---
# - name: Kill old folders
#   become: true
#   file:
#     path: "{{ oracle_path }}"
#     state: absent

# - name: Kill old folders (tmp)
#   become: false
#   file:
#     path: "{{ oracle_tmp_install }}"
#     state: absent

# - name: Create folders
#   file:
#     path: "{{ oracle_path }}"
#     state: directory
#     owner: root
#     group: root
#     mode: "0755"
#   become: true

# - name: Create folders (tmp)
#   file:
#     path: "{{ oracle_tmp_install }}"
#     state: directory
#     owner: root
#     group: root
#     mode: "0755"
#   become: false

# - name: Unarchive client files
#   unarchive:
#     src: "{{ client_path }}/{{ item }}"
#     dest: "{{ oracle_path }}"
#   become: true
#   with_items: "{{ filenames }}"
#   when: arch is defined

- name: Validate oracle_tmp_install exists
  stat:
     path: "{{ oracle_tmp_install }}"
  register: oracle_tmp_install_exists

- name: Debug oracle_tmp_install_exists
  debug:
    var: oracle_tmp_install_exists
    verbosity: "{{ local_debug_verbosity }}"

- name: Fail when oracle_tmp_install does not exist
  fail:
    msg: "Folder {{ oracle_tmp_install }} does not exist"
  when: not oracle_tmp_install_exists.stat.exists

- name: Copy rpm files to install folder
  copy:
      dest: "{{ oracle_tmp_install }}/{{ item }}"
      src: "{{ item }}"
  become: false
  with_items: "{{ filenames }}"
  when: (filenames is defined and oracle_tmp_install_exists.stat.exists)
  register: copy_rpm_packages_result

- name: Debug copy_rpm_packages_result
  debug:
    var: copy_rpm_packages_result
    verbosity: "{{ local_debug_verbosity }}"

- name: Install RPM packages
  yum:
    name: "{{ item.dest }}"
    state: present
  with_items: "{{ copy_rpm_packages_result.results }}"
  register: rpm_install

- name: Debug RPM install
  debug:
    var: rpm_install
    verbosity: "{{ local_debug_verbosity }}"

- name: Kill tmp rpm package
  file:
    path: "{{ item.item.dest }}"
    state: absent
  with_items: "{{ rpm_install.results }}"
  when:
    - not item.failed
    - remove_tmp_rpm_pkg | bool
  register: remove_tmp_rpm_pkg_result

- name: Debug remove_tmp_rpm_pkg
  debug:
    var: remove_tmp_rpm_pkg
    verbosity: "{{ local_debug_verbosity }}"

# - name: Link base folders
#   file:
#     src: "{{ item.src }}"
#     dest: "{{ item.dest }}"
#     state: link
#   become: true
#   with_items:
#     - { src: "./{{ unzip_path }}", dest: "{{ instantclient_path }}" }
#     - { src: "./instantclient/sdk/include", dest: "{{ oracle_include_path }}" }

- name: Debug linked_libraries
  debug:
    var: linked_libraries
    verbosity: "{{ local_debug_verbosity }}"

- name: Link libraries to give versionless file
  file:
    src: "{{ item }}.{{ libtype }}.{{ version_cfg.link }}"
    dest: "{{ oracle_path }}/{{ version_cfg.lib }}/{{ instantclient_path }}/lib/{{ item }}.{{ libtype }}"
    state: link
  become: false
  with_items: "{{ linked_libraries }}"

- name: Define libraries in /etc/environment
  become: false
  blockinfile:
    dest: /etc/environment
    block: |
      ORACLE_HOME={{ oracle_path }}/{{ version_cfg.lib }}/{{ instantclient_path }}
      OCI_HOME={{ oracle_path }}/{{ version_cfg.lib }}/{{ instantclient_path }}
      OCI_LIB_DIR={{ oracle_path }}/{{ version_cfg.lib }}/{{ instantclient_path }}/lib
      # OCI_INC_DIR={{ oracle_include_path }}/{{ version_cfg.lib }}/{{ instantclient_path }}
      # OCI_INCLUDE_DIR={{ oracle_include_path }}/{{ version_cfg.lib }}/{{ instantclient_path }}
      {{ lib_path }}={{ oracle_path }}/{{ version_cfg.lib }}/{{ instantclient_path }}/lib
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - ORACLE"

- name: Save system files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  become: false
  with_items:
    - { src: ../templates/oracle.conf.j2, dest: /etc/ld.so.conf.d/oracle.conf }
    - { src: ../templates/oracle.sh.j2, dest: /etc/profile.d/oracle.sh }
  register: saved_system_filess

- shell: ldconfig
  become: false
  when: saved_system_filess is changed
