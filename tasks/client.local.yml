---

- set_fact:
    local_home: "{{ lookup('env','HOME') }}"

- debug: var=local_home

- name: Get status of the opt_path
  stat: path={{ opt_path }}
  connection: local
  register: stat_opt_path

- fail: msg="opt_path does not exist"
  when: (stat_opt_path.stat.exists is defined and stat_opt_path.stat.exists|bool == false)

- name: Kill old folders
  connection: local
  file: path={{ oracle_path }} state=absent
  become: true

- name: Create folders (local)
  connection: local   
  file: path={{ oracle_path }} state=directory
  become: true

- set_fact:
    filenames: []

- set_fact:
    filenames: "{{ filenames }} + [ 'instantclient-{{item}}-{{dist}}.{{arch}}-{{version}}.zip' ]"
  with_items: "{{packages}}"

#- debug: var=filenames

- name: Unarchive client files
  connection: local   
  unarchive:  src="{{ client_path }}/{{ item }}" dest="{{ oracle_path }}"
  with_items: "{{ filenames }}"
  when: dist is defined and arch is defined
  become: true

- name: Link base folders
  connection: local
  file:  src="{{ item.src }}" dest="{{ item.dest }}" state=link
  with_items:
    - { src: "./{{ unzip_path }}", dest: "{{ instantclient_path }}" }
    - { src: "./instantclient/sdk/include", dest: "{{ oracle_include_path }}" }
  become: true

- name: Link libraries to give versionless file
  connection: local
  file:  src="./{{ item }}.{{ driver }}.{{ ver.file }}" dest="{{ instantclient_path }}/{{ item }}.{{ driver }}" state=link
  with_items:
    - "libclntsh"
    - "libocci"
  become: true

- name: Make TNS_ADMIN directory
  connection: local
  file:  path={{ tns_admin_path }} state=directory
  become: true


- name: Link .ora files
  connection: local
  file:  src="{{ local_home }}/Documents/{{ item }}" dest="{{ tns_admin_path }}/{{ item }}" state=link
  with_items:
    - tnsnames.ora
    - sqlnet.ora
  become: true

- name: Define libraries in {{ item }}
  connection: local
  blockinfile:
    dest: "{{ item }}"
    block: |
      export ORACLE_HOME={{ oracle_path }}
      export OCI_HOME={{ instantclient_path }}
      export OCI_LIB_DIR={{ instantclient_path }}
      export OCI_INC_DIR={{ oracle_include_path }}
      export OCI_INCLUDE_DIR={{ oracle_include_path }}
      export TNS_ADMIN={{ tns_admin_path }}
      export {{ lib_path }}={{ instantclient_path }}
      CLASS_PATH+=:$ORACLE_HOME
      {{ lib_path }}={{ instantclient_path }}
      PATH+=:{{ instantclient_path }}
#      NLS_LANG="American_America.UTF8"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - ORACLE"
  with_items:
    - "{{ local_home }}/.zshrc"
    - "{{ local_home }}/.bash_profile"
  become: true

- name: Define libraries in {{ item }}
  connection: local
  blockinfile:
    dest: "{{ item }}"
    block: |
      Defaults        env_keep += "ORACLE_HOME"
      Defaults        env_keep += "OCI_HOME"
      Defaults        env_keep += "OCI_LIB_DIR"
      Defaults        env_keep += "OCI_INC_DIR"
      Defaults        env_keep += "OCI_INCLUDE_DIR"
      Defaults        env_keep += "TNS_ADMIN"
      Defaults        env_keep += "CLASS_PATH"
    insertafter: "env_reset"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - ORACLE"
  with_items:
    - "/etc/sudoers"
  become: true


